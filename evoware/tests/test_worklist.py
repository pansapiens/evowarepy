import unittest
import tempfile

from .. import fileutil as F
from ..worklist import Worklist


class Test(unittest.TestCase):
    """Test Worklist"""

    def setUp(self):
        """Called before *each* test"""
        self.fname = tempfile.mktemp(suffix=".gwl", prefix='test_worklist_')

    def tearDown(self):
        """Called after *each* test"""
        F.tryRemove(self.fname)

    def test_createWorklistContextManager(self):
        with Worklist() as wl:
            wl._output_str.write('test line 1\n')
            wl._output_str.write('test line 2\n')

        self.assertEqual(wl._target_fh, None)
        self.assertEqual(wl._output_str.getvalue(),
                         'test line 1\ntest line 2\n')

    def test_worklistNoFileHandle(self):

        with Worklist(reportErrors=False) as wl:
            wl.comment('Worklist generated by evoware.worklist.py')

    def test_worklistFileError(self):

        def inner_call():
            # open a read-only file handle, attempt to write
            with Worklist(open(tempfile.mktemp(
                    suffix=".gwl",
                    prefix="test_worklist"), 'rt'), reportErrors=False) as wl:
                wl._output_str.write('test line 1')
                wl._output_str.write('test line 2')

        self.assertRaises(IOError, inner_call)

    def test_gwl_aspirate_dispense(self):
        with Worklist(fh=open(self.fname, 'wt'), reportErrors=False) as wl:
            for i in range(8):
                wl.aspirate(rackLabel='Src1', position=i + 1, volume=25)
                wl.dispense(rackLabel='dst1', position=i + 1, volume=25)

            for i in range(8):
                wl.A('src2', i + 1, 100)
                wl.D('dst2', i + 1, 100)

            for i in range(96):
                wl.transfer('src3', i + 1, 'dst3', i + 1, 150, wash=False)

    def test_worklist_highlevel(self):

        with Worklist(fh=open(self.fname, 'wt'), reportErrors=False) as wl:
            wl.comment('Worklist generated by evoware.worklist.py')
            wl.transferColumn('src3', 2, 'dst3', 12, 120, wash=True)

            wl.comment('worklist.distribute example')
            wl.distribute(srcRackLabel='src1', srcPosStart=1, srcPosEnd=8,
                          dstRackLabel='dst1', dstPosStart=1, dstPosEnd=96,
                          volume=100,
                          nDitiReuses=2, nMultiDisp=12,
                          excludeWells=[1, 96])
